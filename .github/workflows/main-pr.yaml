---
name: Main PR workflow

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]
    branches:
      - main
      - master

permissions:
  actions: read
  checks: read
  contents: write
  deployments: read
  issues: read
  discussions: read
  packages: read
  pages: read
  pull-requests: write
  repository-projects: read
  security-events: read
  statuses: write

# cancel any previously-started, yet still active runs of this workflow on the same branch
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  NEEDS_REVIEW_LABEL: "needs-human-review"

jobs:
  validate-pr-title:
    uses: GigaTech-net/public-reusable-workflows/.github/workflows/rw-validate-pr-title.yaml@main
    with:
      ticket_key_regex: '([Hh][Oo][Tt][Ff][Ii][Xx]|([Pp][Rr][Oo])-\d{1,5})'

  checkout:
    runs-on: ubuntu-latest
    needs: validate-pr-title
    outputs:
      NEEDS_REVIEW_LABEL: ${{ env.NEEDS_REVIEW_LABEL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

  lint:
    name: Lint Code Base
    needs: checkout
    permissions:
      contents: read
      statuses: write
    uses: GigaTech-net/public-reusable-workflows/.github/workflows/rw-super-linter.yaml@PRO-660
    with:
      ### For a DevOps-focused repository. Prevents some code-language linters from running
      ### defaults to false
      devops-only: false
      ### A regex to exclude files from linting
      ### defaults to empty
      # filter-regex-exclude: html/.*

  secret-scan:
    name: Secret Scan
    needs: checkout
    permissions: read-all
    uses: GigaTech-net/public-reusable-workflows/.github/workflows/rw-secret-scan.yaml@main

  spellcheck:
    name: Spellcheck codebase
    needs: checkout
    permissions:
      contents: write
    uses: GigaTech-net/public-reusable-workflows/.github/workflows/rw-spellcheck.yaml@main

  report-code-quality-metric:
    name: Report Code Quality Metric
    needs: [lint, secret-scan, spellcheck]
    if: always()
    permissions: read-all
    uses: GigaTech-net/reusable-workflows/.github/workflows/rw-metric-quality-gate.yaml@main
    secrets: inherit
    with:
      lintStatus: ${{ needs.lint.result }}
      secretScanStatus: ${{ needs.secret-scan.result }}
      spellcheckStatus: ${{ needs.spellcheck.result }}
      sourceId: "ari:cloud:compass:c5f85481-25ba-4ff0-afac-a4bc0082db80:metric-source/0938370a-36b8-4157-8b2d-4cd87e26cf36/ce5dd0e4-7300-4b94-9e00-e6359d95a335"
  
  complexity:
    name: Check Complexity
    needs: checkout
    uses: GigaTech-net/public-reusable-workflows/.github/workflows/rw-complexity.yaml@main
    with:
      needsReviewLabel: ${{ needs.checkout.outputs.NEEDS_REVIEW_LABEL }}
    secrets: inherit

  human-review:
    name: Check if human review is needed
    needs: [checkout, complexity]
    permissions: read-all
    uses: GigaTech-net/public-reusable-workflows/.github/workflows/rw-checkreview.yaml@main
    with:
      needsReviewLabel: ${{ needs.checkout.outputs.NEEDS_REVIEW_LABEL }}
    secrets: inherit

  enable-auto-merge:
    name: Enable Auto Merge
    needs: [human-review, lint, secret-scan, spellcheck]
    runs-on: ubuntu-latest
    steps:
      - name: set to auto merge if human review is not needed (not dependabot)
        if: github.event.pull_request.user.login != 'dependabot[bot]'
        run: |
          {
            gh pr merge --auto --merge "$PR_URL"
          }
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GT_DEVSECOPS_PAT }}

      - name: set to auto merge if human review is not needed (dependabot)
        if: github.event.pull_request.user.login == 'dependabot[bot]'
        run: |
          {
            gh pr merge --auto --merge "$PR_URL"
          }
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  auto-approve:
    name: Auto approve PR
    needs: [human-review, lint, secret-scan, spellcheck]
    runs-on: ubuntu-latest
    if: needs.human-review.outputs.human_review_needed == 'false'
    steps:
      - name: Approve the PR if human review not needed
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
