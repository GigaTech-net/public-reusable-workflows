---
name: Workflow Setup

on:
  workflow_call:
    inputs:
      needsReviewLabel:
        required: false
        type: string
        description: 'the label to signify that a manual review is required'
        default: 'needs-human-review'
    outputs:
      human_review_needed:
        description: "true if a human review is needed, false otherwise"
        value: ${{ jobs.setup.outputs.human_review_needed }}
        
permissions: read-all

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      human_review_needed: ${{ steps.check_hrn_label.outputs.human_review_needed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Check if needs review label is set
        id: check_hrn_label
        run: |
          # shellcheck disable=SC2086
          {
            if [ "${{ github.event_name }}" != "pull_request" ]; then
              echo "This action is not being run in a pull request event, the needsReviewLabel is not applicable."
              exit 0
            fi

            PR_NUMBER=${{ github.event.pull_request.number }}
            LABELS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/labels | jq -r '.[].name')

            NEEDS_REVIEW=false
            if echo "$LABELS" | grep -q "${{ inputs.needsReviewLabel }}"; then
              NEEDS_REVIEW=true
            else
              NEEDS_REVIEW=false
            fi

            {
              echo 'labels<<EOF'
              echo $LABELS
              echo EOF 
            } >> $GITHUB_OUTPUT
            echo "human_review_needed=$NEEDS_REVIEW" >> $GITHUB_OUTPUT

            echo "*************DEBUG START *************"
            echo "Labels:"
            echo "$LABELS"
            echo "---"
            echo "needs human review => $NEEDS_REVIEW"
            echo "*************DEBUG END   *************"
          }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}